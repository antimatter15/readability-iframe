This is a Chrome Extension that allows injection of Readability into arbitrary iframes. It probably opens the door for various dangerous attack vectors, but thankfully, nobody will probably ever use it so nobody's gonna target you. And I think I have the most obvious attacks covered up.

API.

It's really quite simple actually. Any website with the hash including readStyle, readSize and readMargin gets injected with readability.

Examples:

  qfox.nl/weblog/211#readStyle=style-ebook&readSize=size-small&readMargin=margin-large
  
  
  richarddawkins.net/videos/520916-papal-visit-thousands-protest-against-pope-in-london#readStyle=style-newspaper&readSize=size-small&readMargin=margin-x-narrow
  
  
Specifically, the options are (for now):

  readStyle: style-newspaper, style-novel, style-ebook, style-inverse, style-athelas
  
  readSize: size-x-small, size-small, size-medium, size-large, size-x-large
  
  readMargin: margin-x-narrow, margin-narrow, margin-medium, margin-wide, margin-x-wide
  
  
Easy enough right? That's it.



readTools: 
  Example: http://qfox.nl/weblog/211#readStyle=style-ebook&readSize=size-small&readMargin=margin-large&readTools=Instapaper%3D%3Dhttp%3A%2F%2Fantimatter15.github.com%2Freadability-iframe%2Finstapaper.png


Instapaper extension


var obj = {
  'Instapaper': {
    icon: 'http://antimatter15.github.com/readability-iframe/instapaper.png',
    callback: function(url){
      var j = document.createElement('script');
      if(localStorage.Instapaper_user){
        localStorage.Instapaper_user = prompt('What is your Instapaper Username or Email address?');
        localStorage.Instapaper_pass = prompt('What is your Instapaper Password? You might not have one, if so, leave it blank.','');
      }
      var user = encodeURIComponent(localStorage.Instapaper_user), pass = localStorage.Instapaper_pass;
      window.instapaper_callback = function(res){
        var errorCodes = {
          400: "Bad request or exceeded the rate limit. Probably missing a required parameter, such as url.",
          403: "Invalid username or password.",
          500: "The service encountered an error. Please try again later."
        }
        if(res.status != 201){
          alert(errorCodes[res.status]||'This shouldnt be possible.');
        }
      }
      j.src = 'https://www.instapaper.com/api/add?jsonp=instapaper_callback&username='+user+'&pass='+pass+'&url='+encodeURIComponent(url);
      document.body.appendChild(j);
    }
  }
};

window.onmessage = function(e){
  if(e.data.substr(0,8) == 'READREAD'){
    var data = e.data.substr(8);
    obj[data].callback(e.origin);
  }
}
var tools = [];
for(var i in obj){
  tools.push(i+'=='+obj[i].icon);
}

encodeURIComponent(tools.join(';'));

